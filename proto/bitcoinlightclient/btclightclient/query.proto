syntax = "proto3";

package bitcoinlightclient.btclightclient;

import "amino/amino.proto";
import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "bitcoinlightclient/btclightclient/params.proto";

option go_package = "bitcoin-lightclient/x/btclightclient/types";

// Query defines the gRPC querier service.
service Query {
  
  // Parameters queries the parameters of the module.
  rpc Params (QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/bitcoin-lightclient/btclightclient/params";
  
  }
  
  // Queries a list of GetHeader items.
  rpc GetHeader (QueryGetHeaderRequest) returns (QueryGetHeaderResponse) {
    option (google.api.http).get = "/bitcoin-lightclient/btclightclient/get_header/{height}";
  
  }
  
  // Queries a list of LatestBlock items.
  rpc LatestBlock (QueryLatestBlockRequest) returns (QueryLatestBlockResponse) {
    option (google.api.http).get = "/bitcoin-lightclient/btclightclient/latest_block";
  
  }
}
// QueryParamsRequest is request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is response type for the Query/Params RPC method.
message QueryParamsResponse {
  
  // params holds all the parameters of this module.
  Params params = 1 [(gogoproto.nullable) = false, (amino.dont_omitempty) = true];
}

message QueryGetHeaderRequest {
  uint64 height = 1;
}

message QueryGetHeaderResponse {
  int64 height = 1;
  string headerHex = 2;
}

message QueryLatestBlockRequest {}

message QueryLatestBlockResponse {
  uint64 height = 1;
  string headerHex = 2;
}

